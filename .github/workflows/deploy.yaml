name: CI-CD

on:
  push:
    branches:
      - main

  # 수동으로 Action 동작시킬 수 있음
  workflow_dispatch:

env:
  S3_BUCKET_NAME: board-me
  RESOURCE_PATH: ./src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: board-me
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: board-we

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

        # [1]
      - name: Set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          # 프로젝트 내에 필요한 변수 값 주입
          # spring.datasource.url: ${{ vars.DATASOURCE_URL }}
          spring.datasource.username: ${{ vars.DATASOURCE_USERNAME }}
          spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD }}
          board-we.file-server: ${{ vars.FILE_SERVER_URL }}
          file.upload-dir: ${{ vars.FILE_UPLOAD_PATH }}
          # override.value: 'from deploy.yaml' <-- 이렇게 사용해도 주입이 된다.

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

        # [2]
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

        # [3]
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # [4]
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

        # [5]
      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

        # [6]
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
